document.addEventListener('DOMContentLoaded', function() {
    // Botones
    const cbuButton = document.getElementById('cbuButton');
    const noSaludoButton = document.getElementById('noSaludoButton');
    const editButton = document.getElementById('editButton');
    const saludoFButton = document.getElementById('saludoFButton'); // Nuevo bot√≥n para Saludo F
    
    // Campos de usuario
    const username = document.getElementById('username');
    const accountHolder = document.getElementById('accountHolder');
    const cbu = document.getElementById('cbu');
    const alias = document.getElementById('alias');
    
    let isEditing = false;

    // Funci√≥n para guardar los datos en localStorage
    function saveData() {
        localStorage.setItem('accountHolder', accountHolder.value);
        localStorage.setItem('cbu', cbu.value);
        localStorage.setItem('alias', alias.value);
    }

    // Funci√≥n para cargar los datos desde localStorage
    function loadData() {
        if (localStorage.getItem('accountHolder')) {
            accountHolder.value = localStorage.getItem('accountHolder');
        }
        if (localStorage.getItem('cbu')) {
            cbu.value = localStorage.getItem('cbu');
        }
        if (localStorage.getItem('alias')) {
            alias.value = localStorage.getItem('alias');
        }
    }

    // Cargar los datos al inicio de la p√°gina
    loadData();

    // Funci√≥n para activar o desactivar el modo de edici√≥n
    function toggleEditMode() {
        const accountHolderLabel = document.querySelector('label[for="accountHolder"]');
        const cbuLabel = document.querySelector('label[for="cbu"]');
        const aliasLabel = document.querySelector('label[for="alias"]');
        
        if (isEditing) {
            editButton.innerHTML = '<i class="bi bi-pencil-square"></i> Editar';
            accountHolderLabel.textContent = 'Titular de la cuenta: ' + accountHolder.value;
            cbuLabel.textContent = 'CBU: ' + cbu.value;
            aliasLabel.textContent = 'Alias: ' + alias.value;
            accountHolder.disabled = true;
            cbu.disabled = true;
            alias.disabled = true;
            saveData();  // Guardar los datos despu√©s de editar
        } else {
            editButton.innerHTML = '<i class="bi bi-save"></i> Guardar';
            accountHolder.disabled = false;
            cbu.disabled = false;
            alias.disabled = false;
        }

        isEditing = !isEditing;
    }

    // Funci√≥n para obtener un saludo aleatorio (incluye los nuevos saludos para "Saludo F")
    function getRandomGreetingF() {
        const userName = username.value.trim();
        const greetings = [
            `¬°Holisss${userName ? ` ${userName}` : ''} ¬øC√≥mo va todo? ‚ù§Ô∏è`,
            `¬°Hola, reinaa${userName ? ` ${userName}` : ''}! ¬øC√≥mo va todo? üòÑ`,
            `¬°Holaaa, bellaa${userName ? ` ${userName}` : ''}! Te paso los datos que pedis üòä`,
            `¬°Qu√© tal lindaa${userName ? `, ${userName}` : ''}‚ù§Ô∏è Ac√° tenes los datos`,
            `¬°Holaaa, amigaa${userName ? ` ${userName}` : ''}! Podes enviar por ac√° ‚úÖ`,
            `¬°Holaaa, bellaa${userName ? ` ${userName}` : ''}! Te dejo los datos abajo‚¨áÔ∏è`,
            `¬°Hola, reinaa${userName ? ` ${userName}` : ''}! ¬øC√≥mo est√°s? üòò Te envie la info`,
            `¬°Buenaas amigaa${userName ? ` ${userName}` : ''}! ¬øTodo en orden? üòä`,
            `¬°Holaaa, amigaa${userName ? ` ${userName}` : ''}! Aqu√≠ te paso la info que necesit√°s ‚û°Ô∏è`,
            `¬°Como estas amiga${userName ? `, ${userName}` : ''}, todo bien? Aqu√≠ te mando lo que pediste üì≤`,
            `¬°Holaaa, reinaa${userName ? ` ${userName}` : ''}! Te paso los datos para que los puedas enviarüëá`
        ];

        const randomIndex = Math.floor(Math.random() * greetings.length);
        return greetings[randomIndex];
    }

    // Funci√≥n para obtener un mensaje de advertencia aleatorio
    function getRandomWarningMessage() {
        const warningMessages = [
            "*¬°Acordate de verificar el ALIAS o CBU antes de transferir!*‚ö†Ô∏è‚ùóÔ∏è",
            "*No olvides revisar que el CBU o el ALIAS sean correctos antes de realizar la transferencia.*",
            "*Por favor, revis√° los datos antes de confirmar la operaci√≥n‚úÖ.*",
            "*Aseg√∫rate de que los datos (ALIAS o CBU) sean correctos antes de proceder*‚ùóÔ∏è.",
            "Siempre es recomendable verificar que el ALIAS y el CBU est√©n correctos antes de hacer la transferencia.‚ö†Ô∏è",
            "*No te olvides* de comprobar bien los datos antes de enviar el dinero‚ùóÔ∏è.",
            "Es importante *verificar* que el ALIAS o el CBU sean correctos antes de continuar con la transferencia.",
            "*Revisa* los datos nuevamente para evitar errores en la transferencia.‚ùó",
            "Antes de transferir, confirma que el ALIAS o CBU sean correctos. ‚ö†Ô∏è",
            "Verifica que el CBU o el ALIAS est√©n bien antes de continuar con la operaci√≥n. ‚úÖ",
            "Es clave revisar los datos antes de proceder con la transferencia. ‚ùóÔ∏è",
            "No olvides chequear que el ALIAS y el CBU sean correctos antes de enviar el dinero. ‚ö†Ô∏è",
            "Revisa bien los datos (CBU o ALIAS) antes de confirmar la transferencia. ‚úÖ",
            "Siempre aseg√∫rate de que el CBU o ALIAS est√©n bien ingresados antes de hacer la transferencia. ‚ùóÔ∏è",
            "Aseg√∫rate de revisar el ALIAS o CBU antes de hacer la transferencia‚ö†Ô∏è‚ùóÔ∏è."
        ];

        const randomIndex = Math.floor(Math.random() * warningMessages.length);
        return warningMessages[randomIndex];
    }

    // Funci√≥n para generar el mensaje completo con el saludo de Saludo F
    function generateSaludoFMessage() {
        const greeting = getRandomGreetingF();
        const data = shuffleData();

        let message = `${greeting}\n\n`;
        data.forEach(item => {
            message += `${item.label}: ${item.value}\n`;
        });

        message += `\n${getRandomWarningMessage()}`;
        return message.trim();
    }

    // Funci√≥n para mezclar los datos
    function shuffleData() {
        const data = [
            { label: 'CBU', value: cbu.value },
            { label: 'Titular', value: accountHolder.value },
            { label: 'Alias', value: alias.value }
        ];

        data.sort(() => Math.random() - 0.5);
        return data;
    }

    // Funci√≥n para generar el mensaje compacto
    function generateCompactMessage() {
        const greeting = getRandomGreeting();
        const data = shuffleData();

        let message = `${greeting}\n\n`;
        data.forEach(item => {
            message += `${item.label}: ${item.value}\n`;
        });

        message += `\n${getRandomWarningMessage()}`;
        return message.trim();
    }

    // Funci√≥n para generar el mensaje detallado
    function generateDetailedMessage() {
        const data = shuffleData();
        const greeting = getRandomGreeting();

        return `${greeting}\n\n` +
               `${data[0].label}: ${data[0].value}\n` +
               `${data[1].label}: ${data[1].value}\n` +
               `${data[2].label}: ${data[2].value}\n\n` +
               `${getRandomWarningMessage()}`.trim();
    }

    // Funci√≥n para generar mensaje sin saludo
    function generateMessageWithoutGreeting() {
        const startMessages = [
            "*Heey, te dejo estos datos para cargar*üòÄ:",
            "Podes enviar aca‚úÖ:",
            "Te envi√© la info‚¨áÔ∏è‚¨áÔ∏è:",
            "Ac√° tienes los datos que necesitas:‚úÖ",
            "Estos son los datos para que carguesüòä:",
            "Aqu√≠ tienes la informaci√≥n para cargarüì•:",
            "Te paso los datos que necesitasüëâüìã:",
            "¬°Todo listo! Ac√° est√°n los datos que pedisteüòä:",
            "Aqu√≠ tienes los detalles para cargar:",
            "Ahi te mando, te los dejo por aqu√≠üëá:",
            "Todo en orden? Ac√° est√°n los datos‚úÖ:",
            "Te envie los datos justo aqu√≠:",
            "Ahi te pasoüòä",
            "Te envieeüòä",
            "¬°Listo! Te paso la info a continuaci√≥nüì©:",
            "A continuaci√≥n te dejo la informaci√≥n que necesitas:",
            "Aqu√≠ est√°n los datos para que puedas cargarlos‚úÖ:",
            "Dale, te paso los datos a continuaci√≥nü•≥:"
        ];

        const startMessage = startMessages[Math.floor(Math.random() * startMessages.length)];
        const data = shuffleData();

        return `${startMessage}\n\n` +
               `${data[0].label}: ${data[0].value}\n` +
               `${data[1].label}: ${data[1].value}\n` +
               `${data[2].label}: ${data[2].value}\n\n` +
               `${getRandomWarningMessage()}`;
    }

    // Asignar eventos a los botones
    cbuButton.addEventListener('click', async function() {
        let message;
        if (Math.random() < 0.5) {
            message = generateCompactMessage();
        } else {
            message = generateDetailedMessage();
        }

        document.getElementById('previewText').innerText = message;

        try {
            await navigator.clipboard.writeText(message);
        } catch (err) {
            console.error('Error al copiar el texto: ', err);
        }

        username.value = '';
    });

    noSaludoButton.addEventListener('click', async function() {
        const message = generateMessageWithoutGreeting();

        document.getElementById('previewText').innerText = message;

        try {
            await navigator.clipboard.writeText(message);
        } catch (err) {
            console.error('Error al copiar el texto: ', err);
        }

        username.value = '';
    });

    saludoFButton.addEventListener('click', async function() {
        const message = generateSaludoFMessage();

        document.getElementById('previewText').innerText = message;

        try {
            await navigator.clipboard.writeText(message);
        } catch (err) {
            console.error('Error al copiar el texto: ', err);
        }

        username.value = '';
    });

    editButton.addEventListener('click', function() {
        toggleEditMode();
    });
});
